# -*- coding: utf-8 -*-
"""Tic_Tac_Toe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11gEWwtlK_PVQT3i5cC7H2nMuT_NZJNE6
"""

def analyseboard(board):
  winning_combination = [[0, 1, 2], [3, 4, 5], [6, 7, 8],
        [0, 3, 6], [1, 4, 7], [2, 5, 8],
        [0, 4, 8], [2, 4, 6]]

  for comb in winning_combination:

    # Check if all three positions in the combination are the same and not empty
    if board[comb[0]] !=0 and board[comb[0]]==board[comb[1]] and board[comb[1]]==board[comb[2]]:
      return board[comb[0]]
      # Return the player number (1 or -1) that has won

  return 0
  # Return 0 if no winner is found

def ConstBoard(board):
  print('The current state is:')

  for i in range(9):
    if ((i!=0) and (i%3==0)):
      print('\n') #print newline after every 3 element
    if (board[i]==0):
      print('_', end=" ")
    elif(board[i]==1):
      print('O', end=" ")
    else:
      print('X', end=" ")
  print('\n')

def User1Turn(board):
  pos = int(input("Enter 'X' pos [1-9]: "))
  if(board[pos-1]!=0):   #position is occupied
    print('wrong move')
    exit(0)
  board[pos-1]=-1    #X is represented by '-1'

def User2Turn(board):
  pos = int(input("Enter 'O' pos [1-9]: "))
  if(board[pos-1]!=0):   #position is occupied
    print('wrong move')
    exit(0)
  board[pos-1]=1    #O is represented by '1'

def minmax(board, player):
  # Check if there's a winner
  winner = analyseboard(board)
  if winner!=0:
    #if there is a winner
    return winner * player
  value = -2
  pos = -1
  for i in range(9):
    if board[i] == 0:
      # If the position is empty, try placing the player's marker on it
      board[i] = player
      # Recursively call minmax for the opponent's turn and get the score
      score = -minmax(board, -player)
      # Undo the move
      board[i] = 0
      if(score>value):   #update the best score and position
        value=score
        pos=i
  if(pos==-1):
    return 0
  return value


def CompTurn(board):
  value=-2
  pos=-1
  for i in range(0, 9):
    if(board[i]==0):
      board[i]=1
      score = -minmax(board, -1)
      board[i] = 0
      if(score>value):
        pos=i
        value=score
  board[pos]=1

def main():
  choice = int(input("Enter 1 for Single-Player or 2 for Multi-Player"))
  board =[0, 0, 0, 0, 0, 0, 0, 0, 0]

  if(choice==1):
    print("Computer 'O' vs You 'X'")
    player = int(input("Enter the first(1) or second(2)"))

    for i in range(9):
      if analyseboard(board)!=0:
        break #exist a winner

      if((i+player)%2==0):
        CompTurn(board)
      else:
        ConstBoard(board)
        User1Turn(board)

  else:
    for i in range(0, 9):
      if analyseboard(board)!=0:
        break
      if(i%2==0):
        ConstBoard(board)
        User1Turn(board)
      else:
        ConstBoard(board)
        User2Turn(board)
  ConstBoard(board)
  if(analyseboard(board)==0):
    print("Draw")
  elif(analyseboard(board)==-1):
    print("Player 1 is won")
  else:
    print("Player 2 is won")

main()